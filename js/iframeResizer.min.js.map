{"version":3,"file":"iframeResizer.min.js","sources":["../src/iframeResizer.js"],"sourcesContent":["/*\n * File: iframeResizer.js\n * Desc: Force iframes to size to content.\n * Requires: iframeResizer.contentWindow.js to be loaded into the target frame.\n * Doc: https://github.com/davidjbradshaw/iframe-resizer\n * Author: David J. Bradshaw - dave@bradshaw.net\n * Contributor: Jure Mav - jure.mav@gmail.com\n * Contributor: Reed Dadoune - reed@dadoune.com\n */\n\n// eslint-disable-next-line sonarjs/cognitive-complexity, no-shadow-restricted-names\n;(function (undefined) {\n  if (typeof window === 'undefined') return // don't run for server side render\n\n  const msgHeader = 'message'\n  const msgHeaderLen = msgHeader.length\n  const msgId = '[iFrameSizer]' // Must match iframe msg ID\n  const msgIdLen = msgId.length\n  const resetRequiredMethods = Object.freeze({\n    max: 1,\n    scroll: 1,\n    bodyScroll: 1,\n    documentElementScroll: 1\n  })\n  const settings = {}\n\n  const defaults = Object.freeze({\n    autoResize: true,\n    bodyBackground: null,\n    bodyMargin: null,\n    bodyPadding: null,\n    checkOrigin: true,\n    direction: 'vertical',\n    inPageLinks: false,\n    enablePublicMethods: true,\n    heightCalculationMethod: 'auto',\n    id: 'iFrameResizer',\n    log: false,\n    maxHeight: Infinity,\n    maxWidth: Infinity,\n    minHeight: 0,\n    minWidth: 0,\n    mouseEvents: true,\n    offsetHeight: 0,\n    offsetWidth: 0,\n    postMessageTarget: null,\n    sameDomain: false,\n    scrolling: false,\n    sizeHeight: true,\n    sizeWidth: false,\n    warningTimeout: 5000,\n    tolerance: 0,\n    widthCalculationMethod: 'auto',\n    onClose: () => true,\n    onClosed() {},\n    onInit: false,\n    onMessage: null,\n    onMouseEnter() {},\n    onMouseLeave() {},\n    onReady(messageData) {\n      if (typeof settings[messageData.id].onInit === 'function') {\n        advise(\n          messageData.id,\n          `\n\\u001B[31;1mDeprecated Option\\u001B[m\n\nThe \\u001B[1monInit()\\u001B[m function is deprecated and has been replaced with \\u001B[1monReady()\\u001B[m. It will be removed in a future version of iFrame Resizer.\n        `\n        )\n        settings[messageData.id].onInit(messageData)\n      }\n    },\n    onResized() {},\n    onScroll: () => true\n  })\n\n  let count = 0\n  let logEnabled = false\n  let pagePosition = null\n\n  const addEventListener = (el, evt, func) =>\n    el.addEventListener(evt, func, false)\n\n  const removeEventListener = (el, evt, func) =>\n    el.removeEventListener(evt, func, false)\n\n  const isLogEnabled = (iframeId) =>\n    settings[iframeId] ? settings[iframeId].log : logEnabled\n\n  function getMyID(iframeId) {\n    if (window.top === window.self) {\n      return `Host page: ${iframeId}`\n    }\n\n    return window?.parentIFrame?.getId\n      ? `${window.parentIFrame.getId()}: ${iframeId}`\n      : `Nested host page: ${iframeId}`\n  }\n\n  const formatLogHeader = (iframeId) => `${msgId}[${getMyID(iframeId)}]`\n\n  const formatLogMsg = (iframeId, ...msg) =>\n    [`${msgId}[${iframeId}]`, ...msg].join(' ')\n\n  const output = (type, iframeId, ...msg) =>\n    // eslint-disable-next-line no-console\n    console[type](formatLogHeader(iframeId), ...msg)\n\n  const log = (iframeId, ...msg) =>\n    isLogEnabled(iframeId) === true ? output('log', iframeId, ...msg) : null\n\n  const info = (iframeId, ...msg) => output('info', iframeId, ...msg)\n\n  const warn = (iframeId, ...msg) => output('warn', iframeId, ...msg)\n\n  const advise = (iframeId, msg) =>\n    // eslint-disable-next-line no-console\n    window.console &&\n    // eslint-disable-next-line no-console\n    console.warn(\n      formatLogMsg(\n        iframeId,\n        window.chrome // Only show formatting in Chrome as not supported in other browsers\n          ? msg\n          : msg.replaceAll(/\\u001B\\[[\\d;]*m/gi, '') // eslint-disable-line no-control-regex\n      )\n    )\n\n  function iFrameListener(event) {\n    function resizeIFrame() {\n      ensureInRange('Height')\n      ensureInRange('Width')\n\n      setSize(messageData)\n      setPagePosition(iframeId)\n\n      on('onResized', messageData)\n    }\n\n    function getPaddingEnds(compStyle) {\n      if (compStyle.boxSizing !== 'border-box') {\n        return 0\n      }\n\n      const top = compStyle.paddingTop ? parseInt(compStyle.paddingTop, 10) : 0\n      const bot = compStyle.paddingBottom\n        ? parseInt(compStyle.paddingBottom, 10)\n        : 0\n\n      return top + bot\n    }\n\n    function getBorderEnds(compStyle) {\n      if (compStyle.boxSizing !== 'border-box') {\n        return 0\n      }\n\n      const top = compStyle.borderTopWidth\n        ? parseInt(compStyle.borderTopWidth, 10)\n        : 0\n      const bot = compStyle.borderBottomWidth\n        ? parseInt(compStyle.borderBottomWidth, 10)\n        : 0\n\n      return top + bot\n    }\n\n    function processMsg() {\n      const data = msg.slice(msgIdLen).split(':')\n      const height = data[1] ? Number(data[1]) : 0\n      const iframe = settings[data[0]]?.iframe\n      const compStyle = getComputedStyle(iframe)\n\n      return {\n        iframe,\n        id: data[0],\n        height: height + getPaddingEnds(compStyle) + getBorderEnds(compStyle),\n        width: Number(data[2]),\n        type: data[3]\n      }\n    }\n\n    function ensureInRange(Dimension) {\n      const max = Number(settings[iframeId][`max${Dimension}`])\n      const min = Number(settings[iframeId][`min${Dimension}`])\n      const dimension = Dimension.toLowerCase()\n\n      let size = Number(messageData[dimension])\n\n      log(iframeId, `Checking ${dimension} is in range ${min}-${max}`)\n\n      if (size < min) {\n        size = min\n        log(iframeId, `Set ${dimension} to min value`)\n      }\n\n      if (size > max) {\n        size = max\n        log(iframeId, `Set ${dimension} to max value`)\n      }\n\n      messageData[dimension] = `${size}`\n    }\n\n    function isMessageFromIFrame() {\n      function checkAllowedOrigin() {\n        function checkList() {\n          let i = 0\n          let retCode = false\n\n          log(\n            iframeId,\n            `Checking connection is from allowed list of origins: ${checkOrigin}`\n          )\n\n          for (; i < checkOrigin.length; i++) {\n            if (checkOrigin[i] === origin) {\n              retCode = true\n              break\n            }\n          }\n\n          return retCode\n        }\n\n        function checkSingle() {\n          const remoteHost = settings[iframeId]?.remoteHost\n          log(iframeId, `Checking connection is from: ${remoteHost}`)\n          return origin === remoteHost\n        }\n\n        return checkOrigin.constructor === Array ? checkList() : checkSingle()\n      }\n\n      const { origin, sameDomain } = event\n\n      if (sameDomain) {\n        return true\n      }\n\n      let checkOrigin = settings[iframeId]?.checkOrigin\n\n      if (checkOrigin && `${origin}` !== 'null' && !checkAllowedOrigin()) {\n        throw new Error(\n          `Unexpected message received from: ${origin} for ${messageData.iframe.id}. Message was: ${event.data}. This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains.`\n        )\n      }\n\n      return true\n    }\n\n    function isMessageForUs() {\n      return (\n        msgId === `${msg}`.slice(0, msgIdLen) &&\n        msg.slice(msgIdLen).split(':')[0] in settings\n      ) // ''+Protects against non-string msg\n    }\n\n    function isMessageFromMetaParent() {\n      // Test if this message is from a parent above us. This is an ugly test, however, updating\n      // the message format would break backwards compatibility.\n      const retCode = messageData.type in { true: 1, false: 1, undefined: 1 }\n\n      if (retCode) {\n        log(iframeId, 'Ignoring init message from meta parent page')\n      }\n\n      return retCode\n    }\n\n    function getMsgBody(offset) {\n      return msg.slice(msg.indexOf(':') + msgHeaderLen + offset)\n    }\n\n    function forwardMsgFromIFrame(msgBody) {\n      log(\n        iframeId,\n        `onMessage passed: {iframe: ${messageData.iframe.id}, message: ${msgBody}}`\n      )\n\n      on('onMessage', {\n        iframe: messageData.iframe,\n        message: JSON.parse(msgBody)\n      })\n\n      log(iframeId, '--')\n    }\n\n    function getPageInfo() {\n      const bodyPosition = document.body.getBoundingClientRect()\n      const iFramePosition = messageData.iframe.getBoundingClientRect()\n      const { scrollY, scrollX } = window\n      const { scrollWidth, scrollHeight } = document.documentElement\n\n      return JSON.stringify({\n        iframeHeight: iFramePosition.height,\n        iframeWidth: iFramePosition.width,\n        offsetTop: Math.floor(iFramePosition.top - bodyPosition.top),\n        offsetLeft: Math.floor(iFramePosition.left - bodyPosition.left),\n        scrollHeight,\n        scrollWidth,\n        scrollX,\n        scrollY,\n        windowHeight: window.innerHeight,\n        windowWidth: window.innerWidth\n      })\n    }\n\n    const sendPageInfoToIframe = (type, iframeId) => {\n      const gate = {}\n\n      function throttle(func, frameId) {\n        if (!gate[frameId]) {\n          func()\n          gate[frameId] = requestAnimationFrame(() => {\n            gate[frameId] = null\n          })\n        }\n      }\n\n      function gatedTrigger() {\n        trigger(\n          `Send Page Info (${type})`,\n          `pageInfo:${getPageInfo()}`,\n          iframeId\n        )\n      }\n\n      throttle(gatedTrigger, iframeId)\n    }\n\n    function startPageInfoMonitor() {\n      const sendPageInfo = (type) => () => {\n        if (settings[id]) {\n          sendPageInfoToIframe(type, id)\n        } else {\n          stop()\n        }\n      }\n\n      function setListener(type, func) {\n        log(id, `${type} listeners for sendPageInfo`)\n        func(window, 'scroll', sendPageInfo('scroll'))\n        func(window, 'resize', sendPageInfo('resize window'))\n      }\n\n      function stop() {\n        setListener('Remove ', removeEventListener)\n        resizeObserver.disconnect()\n      }\n\n      function start() {\n        setListener('Add ', addEventListener)\n        resizeObserver.observe(document.body, {\n          attributes: true,\n          childList: true,\n          subtree: true\n        })\n      }\n\n      const id = iframeId // Create locally scoped copy of iFrame ID\n\n      const resizeObserver = new ResizeObserver(sendPageInfo('iframe observed'))\n\n      start()\n\n      if (settings[id]) {\n        settings[id].stopPageInfo = stop\n      }\n    }\n\n    function stopPageInfoMonitor() {\n      if (settings[iframeId]?.stopPageInfo) {\n        settings[iframeId].stopPageInfo()\n        delete settings[iframeId].stopPageInfo\n      }\n    }\n\n    function checkIFrameExists() {\n      let retBool = true\n\n      if (messageData.iframe === null) {\n        warn(iframeId, `The iframe (${messageData.id}) was not found.`)\n        retBool = false\n      }\n\n      return retBool\n    }\n\n    function getElementPosition(target) {\n      const iFramePosition = target.getBoundingClientRect()\n\n      getPagePosition(iframeId)\n\n      return {\n        x: Math.floor(Number(iFramePosition.left) + Number(pagePosition.x)),\n        y: Math.floor(Number(iFramePosition.top) + Number(pagePosition.y))\n      }\n    }\n\n    function scrollRequestFromChild(addOffset) {\n      /* istanbul ignore next */ // Not testable in Karma\n      function reposition() {\n        pagePosition = newPosition\n        scrollTo()\n        log(iframeId, '--')\n      }\n\n      function scrollParent() {\n        if (window.parentIFrame) {\n          window.parentIFrame[`scrollTo${addOffset ? 'Offset' : ''}`](\n            newPosition.x,\n            newPosition.y\n          )\n        } else {\n          warn(\n            iframeId,\n            'Unable to scroll to requested position, window.parentIFrame not found'\n          )\n        }\n      }\n\n      const calcOffset = (messageData, offset) => ({\n        x: Number(messageData.width) + offset.x,\n        y: Number(messageData.height) + offset.y\n      })\n\n      const offset = addOffset\n        ? getElementPosition(messageData.iframe)\n        : { x: 0, y: 0 }\n\n      let newPosition = calcOffset(messageData, offset)\n\n      log(\n        iframeId,\n        `Reposition requested from iFrame (offset x:${offset.x} y:${offset.y})`\n      )\n\n      if (window.top === window.self) {\n        reposition()\n      } else {\n        scrollParent()\n      }\n    }\n\n    function scrollTo() {\n      if (on('onScroll', pagePosition) === false) {\n        unsetPagePosition()\n        return\n      }\n      setPagePosition(iframeId)\n    }\n\n    function findTarget(location) {\n      function jumpToTarget() {\n        const jumpPosition = getElementPosition(target)\n\n        log(\n          iframeId,\n          `Moving to in page link (#${hash}) at x: ${jumpPosition.x} y: ${jumpPosition.y}`\n        )\n\n        pagePosition = {\n          x: jumpPosition.x,\n          y: jumpPosition.y\n        }\n\n        scrollTo()\n        log(iframeId, '--')\n      }\n\n      function jumpToParent() {\n        if (window.parentIFrame) {\n          window.parentIFrame.moveToAnchor(hash)\n          return\n        }\n\n        log(\n          iframeId,\n          `In page link #${hash} not found and window.parentIFrame not found`\n        )\n      }\n\n      const hash = location.split('#')[1] || ''\n      const hashData = decodeURIComponent(hash)\n\n      let target =\n        document.getElementById(hashData) ||\n        document.getElementsByName(hashData)[0]\n\n      if (target) {\n        jumpToTarget()\n        return\n      }\n\n      if (window.top === window.self) {\n        log(iframeId, `In page link #${hash} not found`)\n        return\n      }\n\n      jumpToParent()\n    }\n\n    function onMouse(event) {\n      let mousePos = {}\n\n      if (Number(messageData.width) === 0 && Number(messageData.height) === 0) {\n        const data = getMsgBody(9).split(':')\n        mousePos = {\n          x: data[1],\n          y: data[0]\n        }\n      } else {\n        mousePos = {\n          x: messageData.width,\n          y: messageData.height\n        }\n      }\n\n      on(event, {\n        iframe: messageData.iframe,\n        screenX: Number(mousePos.x),\n        screenY: Number(mousePos.y),\n        type: messageData.type\n      })\n    }\n\n    const on = (funcName, val) => chkEvent(iframeId, funcName, val)\n\n    function checkSameDomain(id) {\n      settings[id].sameDomain =\n        !!settings[id]?.iframe?.contentWindow?.iFrameResizer\n      log(id, `sameDomain: ${settings[id].sameDomain}`)\n    }\n\n    function actionMsg() {\n      if (settings[iframeId]?.firstRun) firstRun()\n\n      switch (messageData.type) {\n        case 'close':\n          closeIFrame(messageData.iframe)\n          break\n\n        case 'message':\n          forwardMsgFromIFrame(getMsgBody(6))\n          break\n\n        case 'mouseenter':\n          onMouse('onMouseEnter')\n          break\n\n        case 'mouseleave':\n          onMouse('onMouseLeave')\n          break\n\n        case 'autoResize':\n          settings[iframeId].autoResize = JSON.parse(getMsgBody(9))\n          break\n\n        case 'scrollTo':\n          scrollRequestFromChild(false)\n          break\n\n        case 'scrollToOffset':\n          scrollRequestFromChild(true)\n          break\n\n        case 'pageInfo':\n          sendPageInfoToIframe('start', iframeId)\n          startPageInfoMonitor()\n          break\n\n        case 'pageInfoStop':\n          stopPageInfoMonitor()\n          break\n\n        case 'inPageLink':\n          findTarget(getMsgBody(9))\n          break\n\n        case 'reset':\n          resetIFrame(messageData)\n          break\n\n        case 'init':\n          resizeIFrame()\n          checkSameDomain(iframeId)\n          on('onReady', messageData.iframe)\n          break\n\n        default:\n          if (messageData.width === 0 && messageData.height === 0) {\n            warn(\n              `Unsupported message received (${messageData.type}), this is likely due to the iframe containing a later ` +\n                `version of iframe-resizer than the parent page`\n            )\n            return\n          }\n\n          if (messageData.width === 0 || messageData.height === 0) {\n            log(iframeId, 'Ignoring message with 0 height or width')\n            return\n          }\n\n          // Recheck document.hidden here, as only Firefox\n          // correctly supports this in the iframe\n          if (document.hidden) {\n            log(iframeId, 'Page hidden - ignored resize request')\n            return\n          }\n\n          resizeIFrame()\n      }\n    }\n\n    function checkSettings(iframeId) {\n      if (!settings[iframeId]) {\n        throw new Error(\n          `${messageData.type} No settings for ${iframeId}. Message was: ${msg}`\n        )\n      }\n    }\n\n    function iFrameReadyMsgReceived() {\n      Object.keys(settings).forEach((iframeId) =>\n        trigger('iFrame requested init', createOutgoingMsg(iframeId), iframeId)\n      )\n    }\n\n    function firstRun() {\n      if (settings[iframeId]) {\n        settings[iframeId].firstRun = false\n      }\n    }\n\n    let msg = event.data\n    let messageData = {}\n    let iframeId = null\n\n    if (msg === '[iFrameResizerChild]Ready') {\n      iFrameReadyMsgReceived()\n      return\n    }\n\n    if (!isMessageForUs()) {\n      info(iframeId, `Ignored: ${msg}`)\n      return\n    }\n\n    messageData = processMsg()\n    iframeId = messageData.id\n\n    if (!iframeId) {\n      warn('iframeResizer received messageData without id, message was: ', msg)\n      return\n    }\n\n    checkSettings(iframeId)\n\n    if (!isMessageFromMetaParent()) {\n      log(iframeId, `Received: ${msg}`)\n      settings[iframeId].loaded = true\n\n      if (checkIFrameExists() && isMessageFromIFrame()) {\n        actionMsg()\n      }\n    }\n  }\n\n  function chkEvent(iframeId, funcName, val) {\n    let func = null\n    let retVal = null\n\n    if (settings[iframeId]) {\n      func = settings[iframeId][funcName]\n\n      if (typeof func === 'function') {\n        retVal = func(val)\n      } else {\n        throw new TypeError(\n          `${funcName} on iFrame[${iframeId}] is not a function`\n        )\n      }\n    }\n\n    return retVal\n  }\n\n  function removeIframeListeners(iframe) {\n    const iframeId = iframe.id\n    delete settings[iframeId]\n  }\n\n  function closeIFrame(iframe) {\n    const iframeId = iframe.id\n    if (chkEvent(iframeId, 'onClose', iframeId) === false) {\n      log(iframeId, 'Close iframe cancelled by onClose event')\n      return\n    }\n    log(iframeId, `Removing iFrame: ${iframeId}`)\n\n    try {\n      // Catch race condition error with React\n      if (iframe.parentNode) {\n        iframe.remove()\n      }\n    } catch (error) {\n      warn(error)\n    }\n\n    chkEvent(iframeId, 'onClosed', iframeId)\n    log(iframeId, '--')\n    removeIframeListeners(iframe)\n  }\n\n  function getPagePosition(iframeId) {\n    if (pagePosition === null) {\n      pagePosition = {\n        x: window.scrollX,\n        y: window.scrollY\n      }\n      log(iframeId, `Get page position: ${pagePosition.x}, ${pagePosition.y}`)\n    }\n  }\n\n  function unsetPagePosition() {\n    pagePosition = null\n  }\n\n  function setPagePosition(iframeId) {\n    if (pagePosition !== null) {\n      window.scrollTo(pagePosition.x, pagePosition.y)\n      log(iframeId, `Set page position: ${pagePosition.x}, ${pagePosition.y}`)\n      unsetPagePosition()\n    }\n  }\n\n  function resetIFrame(messageData) {\n    log(\n      messageData.id,\n      `Size reset requested by ${messageData.type === 'init' ? 'host page' : 'iFrame'}`\n    )\n\n    getPagePosition(messageData.id)\n    setSize(messageData)\n    trigger('reset', 'reset', messageData.id)\n  }\n\n  function setSize(messageData) {\n    const iframeId = messageData.id\n\n    function setDimension(dimension) {\n      const size = `${messageData[dimension]}px`\n      messageData.iframe.style[dimension] = size\n      log(iframeId, `IFrame (${iframeId}) ${dimension} set to ${size}`)\n    }\n\n    if (settings[iframeId].sizeHeight) {\n      setDimension('height')\n    }\n    if (settings[iframeId].sizeWidth) {\n      setDimension('width')\n    }\n  }\n\n  function trigger(calleeMsg, msg, id, noResponseWarning) {\n    function postMessageToIFrame() {\n      const { postMessageTarget, targetOrigin } = settings[id]\n\n      if (settings[id].sameDomain) {\n        try {\n          log(\n            id,\n            `[${calleeMsg}] Sending message to iframe[${id}] (${msg}) via sameDomain`\n          )\n          settings[id].iframe.contentWindow.iFrameListener(msgId + msg)\n          return\n        } catch (error) {\n          warn(id, `Same domain connection failed. Trying cross domain`)\n          settings[id].sameDomain = false\n        }\n      }\n\n      log(\n        id,\n        `[${calleeMsg}] Sending message to iframe[${id}] (${msg}) targetOrigin: ${targetOrigin}`\n      )\n      postMessageTarget.postMessage(msgId + msg, targetOrigin)\n    }\n\n    function iFrameNotFound() {\n      warn(id, `[${calleeMsg}] IFrame(${id}) not found`)\n    }\n\n    function chkAndSend() {\n      if (!settings[id]?.postMessageTarget) {\n        iFrameNotFound()\n        return\n      }\n      postMessageToIFrame()\n    }\n\n    function warnOnNoResponse() {\n      function warning() {\n        if (settings[id] === undefined) return // iframe has been closed while we where waiting\n\n        if (!settings[id].loaded && !settings[id].loadErrorShown) {\n          settings[id].loadErrorShown = true\n          advise(\n            id,\n            `\n\\u001B[31;1mNo response from iFrame\\u001B[m\n            \nThe iframe (\\u001B[3m${id}\\u001B[m) has not responded within ${settings[id].warningTimeout / 1000} seconds. Check \\u001B[1miFrameResizer.contentWindow.js\\u001B[m has been loaded in the iframe.\n\nThis message can be ignored if everything is working, or you can set the \\u001B[1mwarningTimeout\\u001B[m option to a higher value or zero to suppress this warning.\n`\n          )\n        }\n      }\n\n      if (!!noResponseWarning && !!settings[id]?.warningTimeout) {\n        settings[id].msgTimeout = setTimeout(\n          warning,\n          settings[id].warningTimeout\n        )\n      }\n    }\n\n    if (settings[id]) {\n      chkAndSend()\n      warnOnNoResponse()\n    }\n  }\n\n  function createOutgoingMsg(iframeId) {\n    const iframeSettings = settings[iframeId]\n\n    return [\n      iframeId,\n      '8', // Backwards compatability (PaddingV1)\n      iframeSettings.sizeWidth,\n      iframeSettings.log,\n      '32', // Backwards compatability (Interval)\n      iframeSettings.enablePublicMethods,\n      iframeSettings.autoResize,\n      iframeSettings.bodyMargin,\n      iframeSettings.heightCalculationMethod,\n      iframeSettings.bodyBackground,\n      iframeSettings.bodyPadding,\n      iframeSettings.tolerance,\n      iframeSettings.inPageLinks,\n      'child', // Backwards compatability (resizeFrom)\n      iframeSettings.widthCalculationMethod,\n      iframeSettings.mouseEvents,\n      iframeSettings.offsetHeight,\n      iframeSettings.offsetWidth,\n      iframeSettings.sizeHeight\n    ].join(':')\n  }\n\n  const isNumber = (value) => !Number.isNaN(value)\n\n  function setupIFrame(iframe, options) {\n    function setLimits() {\n      function addStyle(style) {\n        const styleValue = settings[iframeId][style]\n\n        if (Infinity !== styleValue && styleValue !== 0) {\n          iframe.style[style] = isNumber(styleValue)\n            ? `${styleValue}px`\n            : styleValue\n          log(iframeId, `Set ${style} = ${iframe.style[style]}`)\n        }\n      }\n\n      function chkMinMax(dimension) {\n        if (!isNumber(`min${dimension}`) || !isNumber(`max${dimension}`)) return\n\n        if (\n          settings[iframeId][`min${dimension}`] >\n          settings[iframeId][`max${dimension}`]\n        ) {\n          throw new Error(\n            `Value for min${dimension} can not be greater than max${dimension}`\n          )\n        }\n      }\n\n      chkMinMax('Height')\n      chkMinMax('Width')\n\n      addStyle('maxHeight')\n      addStyle('minHeight')\n      addStyle('maxWidth')\n      addStyle('minWidth')\n    }\n\n    function newId() {\n      let id = options?.id || defaults.id + count++\n\n      if (document.getElementById(id) !== null) {\n        id += count++\n      }\n\n      return id\n    }\n\n    function ensureHasId(iframeId) {\n      if (typeof iframeId !== 'string') {\n        throw new TypeError('Invaild id for iFrame. Expected String')\n      }\n\n      if (iframeId === '') {\n        // eslint-disable-next-line no-multi-assign\n        iframe.id = iframeId = newId()\n        logEnabled = (options || {}).log\n        log(iframeId, `Added missing iframe ID: ${iframeId} (${iframe.src})`)\n      }\n\n      return iframeId\n    }\n\n    function setScrolling() {\n      log(\n        iframeId,\n        `IFrame scrolling ${\n          settings[iframeId]?.scrolling ? 'enabled' : 'disabled'\n        } for ${iframeId}`\n      )\n\n      iframe.style.overflow =\n        settings[iframeId]?.scrolling === false ? 'hidden' : 'auto'\n\n      switch (settings[iframeId]?.scrolling) {\n        case 'omit':\n          break\n\n        case true:\n          iframe.scrolling = 'yes'\n          break\n\n        case false:\n          iframe.scrolling = 'no'\n          break\n\n        default:\n          iframe.scrolling = settings[iframeId]\n            ? settings[iframeId].scrolling\n            : 'no'\n      }\n    }\n\n    function setupBodyMarginValues() {\n      const { bodyMargin } = settings[iframeId]\n\n      if (typeof bodyMargin === 'number' || bodyMargin === '0') {\n        settings[iframeId].bodyMargin = `${bodyMargin}px`\n      }\n    }\n\n    function checkReset() {\n      const firstRun = settings[iframeId]?.firstRun\n      const resetRequertMethod =\n        settings[iframeId]?.heightCalculationMethod in resetRequiredMethods\n\n      if (!firstRun && resetRequertMethod) {\n        resetIFrame({ iframe, height: 0, width: 0, type: 'init' })\n      }\n    }\n\n    function setupIFrameObject() {\n      if (settings[iframeId]) {\n        settings[iframeId].iframe.iFrameResizer = {\n          close: closeIFrame.bind(null, settings[iframeId].iframe),\n\n          removeListeners: removeIframeListeners.bind(\n            null,\n            settings[iframeId].iframe\n          ),\n\n          resize: trigger.bind(null, 'Window resize', 'resize', iframeId),\n\n          moveToAnchor(anchor) {\n            trigger('Move to anchor', `moveToAnchor:${anchor}`, iframeId)\n          },\n\n          sendMessage(message) {\n            message = JSON.stringify(message)\n            trigger('Send Message', `message:${message}`, iframeId)\n          }\n        }\n      }\n    }\n\n    // We have to call trigger twice, as we can not be sure if all\n    // iframes have completed loading when this code runs. The\n    // event listener also catches the page changing in the iFrame.\n    function init(msg) {\n      function iFrameLoaded() {\n        trigger('iFrame.onload', msg, id, true)\n        checkReset()\n      }\n\n      const { id } = iframe\n\n      addEventListener(iframe, 'load', iFrameLoaded)\n      trigger('init', msg, id, true)\n    }\n\n    function checkOptions(options) {\n      if (!options) return {}\n\n      if (typeof options !== 'object') {\n        throw new TypeError('Options is not an object')\n      }\n\n      if (\n        'sizeWidth' in options ||\n        'sizeHeight' in options ||\n        'autoResize' in options\n      ) {\n        advise(\n          iframeId,\n          `\n\\u001B[31;1mDeprecated Option\\u001Bm\n\nThe \\u001B[1msizeWidth\\u001B[m, \\u001B[1msizeHeight\\u001B[m and \\u001B[1mautoResize\\u001B[m options have been replaced with new \\u001B[1mdirection\\u001B[m option which expects values of \\u001B[3m\"vertical\"\\u001B[m, \\u001B[3m\"horizontal\"\\u001B[m or \\u001B[3m\"horizontal\"\\u001B[m.\n`\n        )\n      }\n\n      return options\n    }\n\n    function setDirection() {\n      if (settings[iframeId].direction === 'horizontal') {\n        settings[iframeId].sizeWidth = true\n        settings[iframeId].sizeHeight = false\n        log(iframeId, 'Direction set to \"horizontal\"')\n        return\n      }\n\n      if (settings[iframeId].direction === 'none') {\n        settings[iframeId].sizeWidth = false\n        settings[iframeId].sizeHeight = false\n        settings[iframeId].autoResize = false\n        log(iframeId, 'Direction set to \"none\"')\n        return\n      }\n\n      if (settings[iframeId].direction !== 'vertical') {\n        throw new TypeError(\n          iframeId,\n          `Direction value of \"${settings[iframeId].direction}\" is not valid`\n        )\n      }\n\n      log(iframeId, 'Direction set to \"vertical\"')\n    }\n\n    function getTargetOrigin(remoteHost) {\n      return remoteHost === '' ||\n        remoteHost.match(/^(about:blank|javascript:|file:\\/\\/)/) !== null\n        ? '*'\n        : remoteHost\n    }\n\n    function getPostMessageTarget() {\n      if (settings[iframeId].postMessageTarget === null)\n        settings[iframeId].postMessageTarget = iframe.contentWindow\n    }\n\n    function processOptions(options) {\n      settings[iframeId] = {\n        iframe,\n        firstRun: true,\n        remoteHost: iframe?.src.split('/').slice(0, 3).join('/'),\n        ...defaults,\n        ...checkOptions(options)\n      }\n\n      setDirection()\n      getPostMessageTarget()\n\n      settings[iframeId].targetOrigin =\n        settings[iframeId].checkOrigin === true\n          ? getTargetOrigin(settings[iframeId].remoteHost)\n          : '*'\n    }\n\n    function beenHere() {\n      return iframeId in settings && 'iFrameResizer' in iframe\n    }\n\n    const iframeId = ensureHasId(iframe.id)\n\n    if (beenHere()) {\n      warn(iframeId, 'Ignored iFrame, already setup.')\n    } else {\n      processOptions(options)\n      setScrolling()\n      setLimits()\n      setupBodyMarginValues()\n      init(createOutgoingMsg(iframeId))\n      setupIFrameObject()\n    }\n  }\n\n  function sendTriggerMsg(eventName, event) {\n    function triggerEnabledIframe(iframeId) {\n      if (isIFrameResizeEnabled(iframeId)) {\n        trigger(eventName, event, iframeId)\n      }\n    }\n\n    const isIFrameResizeEnabled = (iframeId) =>\n      settings[iframeId]?.autoResize && !settings[iframeId]?.firstRun\n\n    Object.keys(settings).forEach(triggerEnabledIframe)\n  }\n\n  function tabVisible() {\n    if (document.hidden === false) {\n      log('document', 'Trigger event: Visibility change')\n      sendTriggerMsg('Tab Visible', 'resize')\n    }\n  }\n\n  function setupEventListeners() {\n    addEventListener(window, 'message', iFrameListener)\n    addEventListener(document, 'visibilitychange', tabVisible)\n    window.iFrameListener = (data) => iFrameListener({ data, sameDomain: true })\n  }\n\n  let setupComplete = false\n\n  function factory() {\n    function setup(options, element) {\n      function chkType() {\n        if (!element.tagName) {\n          throw new TypeError('Object is not a valid DOM element')\n        } else if (element.tagName.toUpperCase() !== 'IFRAME') {\n          throw new TypeError(\n            `Expected <IFRAME> tag, found <${element.tagName}>`\n          )\n        }\n      }\n\n      if (element) {\n        chkType()\n        setupIFrame(element, options)\n        iFrames.push(element)\n      }\n    }\n\n    let iFrames\n\n    if (!setupComplete) {\n      setupEventListeners()\n      setupComplete = true\n    }\n\n    return function (options, target) {\n      iFrames = [] // Only return iFrames past in on this call\n\n      switch (typeof target) {\n        case 'undefined':\n        case 'string':\n          Array.prototype.forEach.call(\n            document.querySelectorAll(target || 'iframe'),\n            setup.bind(undefined, options)\n          )\n          break\n\n        case 'object':\n          setup(options, target)\n          break\n\n        default:\n          throw new TypeError(`Unexpected data type (${typeof target})`)\n      }\n\n      return iFrames\n    }\n  }\n\n  function createJQueryPublicMethod($) {\n    if (!$.fn) {\n      warn('', 'Unable to bind to jQuery, it is not fully loaded.')\n    } else if (!$.fn.iFrameResize) {\n      $.fn.iFrameResize = function (options) {\n        function initJQuery(index, element) {\n          setupIFrame(element, options)\n        }\n\n        return this.filter('iframe').each(initJQuery).end()\n      }\n    }\n  }\n\n  if (window.jQuery !== undefined) {\n    createJQueryPublicMethod(window.jQuery)\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], factory)\n  }\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory()\n  }\n\n  window.iFrameResize = window.iFrameResize || factory()\n})()\n"],"names":["undefined","window","msgHeaderLen","msgHeader","msgId","msgIdLen","length","resetRequiredMethods","Object","freeze","max","scroll","bodyScroll","documentElementScroll","settings","defaults","autoResize","bodyBackground","bodyMargin","bodyPadding","checkOrigin","direction","inPageLinks","enablePublicMethods","heightCalculationMethod","id","log","maxHeight","Infinity","maxWidth","minHeight","minWidth","mouseEvents","offsetHeight","offsetWidth","postMessageTarget","sameDomain","scrolling","sizeHeight","sizeWidth","warningTimeout","tolerance","widthCalculationMethod","onClose","onClosed","onInit","onMessage","onMouseEnter","onMouseLeave","onReady","messageData","advise","onResized","onScroll","count","logEnabled","pagePosition","addEventListener","el","evt","func","removeEventListener","formatLogHeader","iframeId","top","self","parentIFrame","getId","getMyID","output","type","msg","console","isLogEnabled","info","warn","join","formatLogMsg","chrome","replaceAll","iFrameListener","event","resizeIFrame","ensureInRange","setSize","setPagePosition","on","getPaddingEnds","compStyle","boxSizing","paddingTop","parseInt","paddingBottom","getBorderEnds","borderTopWidth","borderBottomWidth","Dimension","Number","min","dimension","toLowerCase","size","getMsgBody","offset","slice","indexOf","sendPageInfoToIframe","gate","frameId","trigger","bodyPosition","document","body","getBoundingClientRect","iFramePosition","iframe","scrollY","scrollX","scrollWidth","scrollHeight","documentElement","JSON","stringify","iframeHeight","height","iframeWidth","width","offsetTop","Math","floor","offsetLeft","left","windowHeight","innerHeight","windowWidth","innerWidth","getPageInfo","requestAnimationFrame","getElementPosition","target","getPagePosition","x","y","scrollRequestFromChild","addOffset","newPosition","calcOffset","scrollTo","unsetPagePosition","onMouse","mousePos","data","split","screenX","screenY","funcName","val","chkEvent","getComputedStyle","processMsg","Error","checkSettings","retCode","true","false","isMessageFromMetaParent","loaded","retBool","checkIFrameExists","origin","constructor","Array","i","checkList","remoteHost","checkSingle","isMessageFromIFrame","firstRun","closeIFrame","msgBody","message","parse","sendPageInfo","stop","setListener","resizeObserver","disconnect","ResizeObserver","observe","attributes","childList","subtree","stopPageInfo","startPageInfoMonitor","location","hash","hashData","decodeURIComponent","getElementById","getElementsByName","jumpPosition","jumpToTarget","moveToAnchor","findTarget","resetIFrame","contentWindow","iFrameResizer","hidden","actionMsg","keys","forEach","createOutgoingMsg","retVal","TypeError","removeIframeListeners","parentNode","remove","error","setDimension","style","calleeMsg","noResponseWarning","targetOrigin","postMessage","postMessageToIFrame","msgTimeout","setTimeout","loadErrorShown","iframeSettings","isNumber","value","isNaN","setupIFrame","options","checkOptions","newId","src","ensureHasId","setDirection","match","processOptions","overflow","setScrolling","addStyle","styleValue","chkMinMax","setLimits","setupBodyMarginValues","resetRequertMethod","checkReset","init","close","bind","removeListeners","resize","anchor","sendMessage","tabVisible","eventName","isIFrameResizeEnabled","sendTriggerMsg","setupComplete","factory","setup","element","tagName","toUpperCase","chkType","iFrames","push","prototype","call","querySelectorAll","$","jQuery","fn","iFrameResize","this","filter","each","index","end","define","amd","module","exports"],"mappings":"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"}